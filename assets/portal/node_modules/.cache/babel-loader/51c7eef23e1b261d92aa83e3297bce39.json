{"ast":null,"code":"import _classCallCheck from\"/Users/sshvans/Documents/work/quickstart/quickstart-onica-cci-postcall-analytics/assets/portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sshvans/Documents/work/quickstart/quickstart-onica-cci-postcall-analytics/assets/portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import rp from'request-promise';import{Auth}from'aws-amplify';import AuthDto from\"../dto/auth.dto\";var HttpMethod={POST:\"POST\",GET:\"GET\",PATCH:\"PATCH\"};var ApiService=/*#__PURE__*/function(){function ApiService(){_classCallCheck(this,ApiService);this.baseUrl=process.env.REACT_APP_BASE_API;}_createClass(ApiService,[{key:\"getCalls\",value:function getCalls(next){return this.request(HttpMethod.GET,\"\".concat(this.baseUrl,\"/calls\"),{next:next},this.getAuth());}},{key:\"_getHeader\",value:function _getHeader(auth){var header={};if(auth){header['Authorization']=\"Bearer \".concat(auth.idToken);}console.log(\"The header\",header);return header;}},{key:\"getAuth\",value:function getAuth(){return Auth.currentSession().then(function(session){return new AuthDto({idToken:session.getIdToken().getJwtToken(),accessToken:session.getAccessToken().getJwtToken(),refreshToken:session.getRefreshToken().getToken()});});}},{key:\"request\",value:function request(method,uri,body){var _this=this;var auth=arguments.length>3&&arguments[3]!==undefined?arguments[3]:Promise.resolve(null);if(method===HttpMethod.POST){return auth.then(function(auth){return _this._post(uri,body,auth);});}else if(method===HttpMethod.GET){return auth.then(function(auth){return _this._get(uri,body,auth);});}else if(method===HttpMethod.PATCH){return auth.then(function(auth){return _this._patch(uri,body,auth);});}else{return Promise.resolve();}}},{key:\"_post\",value:function _post(uri){var body=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var auth=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var options={method:HttpMethod.POST,uri:uri,body:body,headers:this._getHeader(auth),json:true};return rp(options);}},{key:\"_get\",value:function _get(uri,qs){var auth=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var options={method:HttpMethod.GET,uri:uri,qs:qs,headers:this._getHeader(auth),json:true};return rp(options);}},{key:\"_patch\",value:function _patch(uri){var body=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var auth=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var options={method:HttpMethod.PATCH,uri:uri,body:body,headers:this._getHeader(auth),json:true};return rp(options);}}]);return ApiService;}();export{ApiService};","map":{"version":3,"sources":["/Users/sshvans/Documents/work/quickstart/quickstart-onica-cci-postcall-analytics/assets/portal/src/service/api.service.ts"],"names":["rp","Auth","AuthDto","HttpMethod","POST","GET","PATCH","ApiService","baseUrl","process","env","REACT_APP_BASE_API","next","request","getAuth","auth","header","idToken","console","log","currentSession","then","session","getIdToken","getJwtToken","accessToken","getAccessToken","refreshToken","getRefreshToken","getToken","method","uri","body","Promise","resolve","_post","_get","_patch","options","headers","_getHeader","json","qs"],"mappings":"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","sourcesContent":["import rp from 'request-promise';\nimport {Auth} from 'aws-amplify';\nimport AuthDto from \"../dto/auth.dto\";\nimport {PageInterface} from \"../interface/page.interface\";\nimport {CallInterface} from \"../interface/call.interface\";\nimport {AuthInterface} from \"../interface/auth.interface\";\n\nconst HttpMethod = {\n    POST: \"POST\",\n    GET: \"GET\",\n    PATCH: \"PATCH\"\n};\n\nclass ApiService {\n\n    baseUrl = process.env.REACT_APP_BASE_API;\n\n    getCalls(next: string | null): Promise<PageInterface<CallInterface>> {\n        return this.request(HttpMethod.GET, `${this.baseUrl}/calls`, {\n            next\n        }, this.getAuth());\n    }\n\n    _getHeader(auth: AuthInterface | null): object {\n        let header: any = {\n        };\n        if (auth) {\n            header['Authorization'] = `Bearer ${auth.idToken}`;\n        }\n        console.log(\"The header\", header);\n        return header\n    }\n\n    getAuth(): Promise<AuthInterface | null> {\n        return Auth.currentSession()\n            .then(session => new AuthDto({\n                idToken: session.getIdToken().getJwtToken(),\n                accessToken: session.getAccessToken().getJwtToken(),\n                refreshToken: session.getRefreshToken().getToken()\n            }));\n    }\n\n    request(method: string, uri: string, body: object | null, auth: Promise<AuthInterface | null> = Promise.resolve(null)): Promise<any> {\n\n        if (method === HttpMethod.POST) {\n            return auth.then(auth => this._post(uri, body, auth));\n        } else if (method === HttpMethod.GET) {\n            return auth.then(auth => this._get(uri, body, auth));\n        } else if (method === HttpMethod.PATCH) {\n            return auth.then(auth => this._patch(uri, body, auth));\n        } else {\n            return Promise.resolve();\n        }\n    }\n\n    _post(uri: string, body: object | null = {}, auth: AuthInterface | null = null) {\n        let options = {method: HttpMethod.POST, uri, body, headers: this._getHeader(auth), json: true};\n        return rp(options)\n    }\n\n    _get(uri: string, qs: object | null, auth: AuthInterface | null = null) {\n        let options = {method: HttpMethod.GET, uri, qs, headers: this._getHeader(auth), json: true};\n        return rp(options)\n    }\n\n    _patch(uri: string, body: object | null = {}, auth: AuthInterface | null = null) {\n        let options = {method: HttpMethod.PATCH, uri, body, headers: this._getHeader(auth), json: true};\n        return rp(options)\n    }\n\n}\n\nexport {ApiService};"]},"metadata":{},"sourceType":"module"}