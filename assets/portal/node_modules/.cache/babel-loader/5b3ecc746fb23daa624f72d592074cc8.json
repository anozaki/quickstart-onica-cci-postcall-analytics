{"ast":null,"code":"import _objectSpread from\"/Users/sshvans/Documents/work/quickstart/quickstart-onica-cci-postcall-analytics/assets/portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{AuthActionKey}from\"../actions/auth.actions\";var initialState={loading:false,loginError:null,isAuthenticated:false,// indicate if change password is requested by cognito.\nchangePassword:false,user:{email:\"\",roles:[]}};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case AuthActionKey.LOGIN_PENDING:return _objectSpread(_objectSpread({},state),{},{loading:action.value});case AuthActionKey.LOGIN_ERROR:var changePassword=state.changePassword||false;var result=action.value.error;// once the changePassword is set, we keep it on until the user is successful...\nif(!changePassword&&result){changePassword=result.error._error.name===\"NewPasswordRequired\";}return _objectSpread(_objectSpread({},state),{},{changePassword:changePassword,loginError:result});case AuthActionKey.LOGIN:return _objectSpread(_objectSpread({},state),{},{isAuthenticated:true,changePassword:false,user:action.value.user});case AuthActionKey.LOGOUT:return _objectSpread(_objectSpread({},state),{},{changePassword:false,isAuthenticated:false,user:null});default:{return state;}}};export default reducer;","map":{"version":3,"sources":["/Users/sshvans/Documents/work/quickstart/quickstart-onica-cci-postcall-analytics/assets/portal/src/store/reducers/auth.reducer.ts"],"names":["AuthActionKey","initialState","loading","loginError","isAuthenticated","changePassword","user","email","roles","reducer","state","action","type","LOGIN_PENDING","value","LOGIN_ERROR","result","error","_error","name","LOGIN","LOGOUT"],"mappings":"oNAAA,OAAQA,aAAR,KAA4B,yBAA5B,CAGA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,OAAO,CAAE,KADQ,CAEjBC,UAAU,CAAE,IAFK,CAGjBC,eAAe,CAAE,KAHA,CAKjB;AACAC,cAAc,CAAE,KANC,CAOjBC,IAAI,CAAE,CACFC,KAAK,CAAE,EADL,CAEFC,KAAK,CAAE,EAFL,CAPW,CAArB,CAaA,GAAMC,CAAAA,OAAgB,CAAG,QAAnBA,CAAAA,OAAmB,EAA+C,IAA9CC,CAAAA,KAA8C,2DAAtCT,YAAsC,IAAxBU,CAAAA,MAAwB,2CACpE,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKZ,CAAAA,aAAa,CAACa,aAAnB,CACI,sCACOH,KADP,MAEIR,OAAO,CAAES,MAAM,CAACG,KAFpB,GAIJ,IAAKd,CAAAA,aAAa,CAACe,WAAnB,CACI,GAAIV,CAAAA,cAAc,CAAGK,KAAK,CAACL,cAAN,EAAwB,KAA7C,CACA,GAAIW,CAAAA,MAAM,CAAGL,MAAM,CAACG,KAAP,CAAaG,KAA1B,CAEA;AACA,GAAI,CAACZ,cAAD,EAAmBW,MAAvB,CAA+B,CAC3BX,cAAc,CAAGW,MAAM,CAACC,KAAP,CAAaC,MAAb,CAAoBC,IAApB,GAA6B,qBAA9C,CACH,CAED,sCACOT,KADP,MAEIL,cAAc,CAAEA,cAFpB,CAGIF,UAAU,CAAEa,MAHhB,GAKJ,IAAKhB,CAAAA,aAAa,CAACoB,KAAnB,CACI,sCACOV,KADP,MAEIN,eAAe,CAAE,IAFrB,CAGIC,cAAc,CAAE,KAHpB,CAIIC,IAAI,CAAEK,MAAM,CAACG,KAAP,CAAaR,IAJvB,GAMJ,IAAKN,CAAAA,aAAa,CAACqB,MAAnB,CACI,sCACOX,KADP,MAEIL,cAAc,CAAE,KAFpB,CAGID,eAAe,CAAE,KAHrB,CAIIE,IAAI,CAAE,IAJV,GAMJ,QAAS,CACL,MAAOI,CAAAA,KAAP,CACH,CApCL,CAsCH,CAvCD,CAyCA,cAAeD,CAAAA,OAAf","sourcesContent":["import {AuthActionKey} from \"../actions/auth.actions\";\nimport {Reducer} from \"redux\";\n\nconst initialState = {\n    loading: false,\n    loginError: null,\n    isAuthenticated: false,\n\n    // indicate if change password is requested by cognito.\n    changePassword: false,\n    user: {\n        email: \"\",\n        roles: []\n    }\n};\n\nconst reducer: Reducer = (state = initialState, action: any): object => {\n    switch (action.type) {\n        case AuthActionKey.LOGIN_PENDING:\n            return {\n                ...state,\n                loading: action.value\n            };\n        case AuthActionKey.LOGIN_ERROR:\n            let changePassword = state.changePassword || false;\n            let result = action.value.error;\n\n            // once the changePassword is set, we keep it on until the user is successful...\n            if (!changePassword && result) {\n                changePassword = result.error._error.name === \"NewPasswordRequired\";\n            }\n\n            return {\n                ...state,\n                changePassword: changePassword,\n                loginError: result\n            };\n        case AuthActionKey.LOGIN:\n            return {\n                ...state,\n                isAuthenticated: true,\n                changePassword: false,\n                user: action.value.user\n            };\n        case AuthActionKey.LOGOUT:\n            return {\n                ...state,\n                changePassword: false,\n                isAuthenticated: false,\n                user: null\n            };\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}