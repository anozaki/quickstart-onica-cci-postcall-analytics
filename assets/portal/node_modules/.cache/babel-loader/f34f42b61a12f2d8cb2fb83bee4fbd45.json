{"ast":null,"code":"import{ApiService}from\"../../service/api.service\";import AuthService from\"../../service/auth.service\";var apiService=new ApiService();var authService=new AuthService(apiService);var AuthActionKey={LOGIN_PENDING:\"LOGIN_PENDING\",LOGIN:\"LOGIN\",LOGOUT:\"LOGOUT\",LOGIN_ERROR:\"LOGIN_ERROR\"};var loginResults=function loginResults(authenticated,user){return{type:AuthActionKey.LOGIN,value:{isAuthenticated:authenticated,user:user}};};var loginErrorResults=function loginErrorResults(error){return{type:AuthActionKey.LOGIN_ERROR,value:{error:error}};};var logoutResults=function logoutResults(){return{type:AuthActionKey.LOGOUT};};var AuthAction={auth:function auth(user){return function(dispatch){var payload=user.getSignInUserSession().getIdToken().decodePayload();dispatch(loginResults(true,{email:payload['email'],roles:payload['cognito:groups']}));};},logout:function logout(){return function(dispatch){authService.logout();// dispatch(logoutResults());\n// dispatch(loginErrorResults(null));\n// history.push('/login');\n};}};export{AuthActionKey,AuthAction};","map":{"version":3,"sources":["/Users/sshvans/Documents/work/quickstart/quickstart-onica-cci-postcall-analytics/assets/portal/src/store/actions/auth.actions.ts"],"names":["ApiService","AuthService","apiService","authService","AuthActionKey","LOGIN_PENDING","LOGIN","LOGOUT","LOGIN_ERROR","loginResults","authenticated","user","type","value","isAuthenticated","loginErrorResults","error","logoutResults","AuthAction","auth","dispatch","payload","getSignInUserSession","getIdToken","decodePayload","email","roles","logout"],"mappings":"AAAA,OAAQA,UAAR,KAAyB,2BAAzB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CAKA,GAAMC,CAAAA,UAAU,CAAG,GAAIF,CAAAA,UAAJ,EAAnB,CACA,GAAMG,CAAAA,WAAW,CAAG,GAAIF,CAAAA,WAAJ,CAAgBC,UAAhB,CAApB,CAEA,GAAME,CAAAA,aAAa,CAAG,CAClBC,aAAa,CAAE,eADG,CAElBC,KAAK,CAAE,OAFW,CAGlBC,MAAM,CAAE,QAHU,CAIlBC,WAAW,CAAE,aAJK,CAAtB,CAOA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,aAAD,CAAyBC,IAAzB,CAAiD,CAClE,MAAO,CACHC,IAAI,CAAER,aAAa,CAACE,KADjB,CAEHO,KAAK,CAAE,CACHC,eAAe,CAAEJ,aADd,CAEHC,IAAI,CAAJA,IAFG,CAFJ,CAAP,CAOH,CARD,CAUA,GAAMI,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAgB,CACtC,MAAO,CACHJ,IAAI,CAAER,aAAa,CAACI,WADjB,CAEHK,KAAK,CAAE,CACHG,KAAK,CAALA,KADG,CAFJ,CAAP,CAMH,CAPD,CASA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxB,MAAO,CACHL,IAAI,CAAER,aAAa,CAACG,MADjB,CAAP,CAGH,CAJD,CAMA,GAAMW,CAAAA,UAAU,CAAG,CACfC,IAAI,CAAE,cAACR,IAAD,CAAuB,CACzB,MAAO,UAACS,QAAD,CAAwB,CAC3B,GAAIC,CAAAA,OAAO,CAAGV,IAAI,CAACW,oBAAL,GAA6BC,UAA7B,GAA0CC,aAA1C,EAAd,CACAJ,QAAQ,CAACX,YAAY,CAAC,IAAD,CAAO,CACxBgB,KAAK,CAAEJ,OAAO,CAAC,OAAD,CADU,CAExBK,KAAK,CAAEL,OAAO,CAAC,gBAAD,CAFU,CAAP,CAAb,CAAR,CAIH,CAND,CAOH,CATc,CAUfM,MAAM,CAAE,iBAAM,CACV,MAAO,UAACP,QAAD,CAAwB,CAC3BjB,WAAW,CAACwB,MAAZ,GACA;AACA;AACA;AACH,CALD,CAMH,CAjBc,CAAnB,CAoBA,OAAQvB,aAAR,CAAuBc,UAAvB","sourcesContent":["import {ApiService} from \"../../service/api.service\";\nimport history from \"../../history\";\nimport AuthService from \"../../service/auth.service\";\nimport {Dispatch} from \"redux\";\nimport {UserInterface} from \"../../interface/user.interface\";\nimport {CognitoUser} from \"amazon-cognito-identity-js\";\n\nconst apiService = new ApiService();\nconst authService = new AuthService(apiService);\n\nconst AuthActionKey = {\n    LOGIN_PENDING: \"LOGIN_PENDING\",\n    LOGIN: \"LOGIN\",\n    LOGOUT: \"LOGOUT\",\n    LOGIN_ERROR: \"LOGIN_ERROR\"\n};\n\nconst loginResults = (authenticated: boolean, user: UserInterface) => {\n    return {\n        type: AuthActionKey.LOGIN,\n        value: {\n            isAuthenticated: authenticated,\n            user\n        }\n    }\n};\n\nconst loginErrorResults = (error: any) => {\n    return {\n        type: AuthActionKey.LOGIN_ERROR,\n        value: {\n            error\n        }\n    }\n};\n\nconst logoutResults = () => {\n    return {\n        type: AuthActionKey.LOGOUT\n    }\n};\n\nconst AuthAction = {\n    auth: (user: CognitoUser) => {\n        return (dispatch: Dispatch) => {\n            let payload = user.getSignInUserSession()!.getIdToken().decodePayload();\n            dispatch(loginResults(true, {\n                email: payload['email'],\n                roles: payload['cognito:groups']\n            }));\n        };\n    },\n    logout: () => {\n        return (dispatch: Dispatch) => {\n            authService.logout();\n            // dispatch(logoutResults());\n            // dispatch(loginErrorResults(null));\n            // history.push('/login');\n        }\n    }\n};\n\nexport {AuthActionKey, AuthAction}"]},"metadata":{},"sourceType":"module"}