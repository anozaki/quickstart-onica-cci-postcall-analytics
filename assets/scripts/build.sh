#!/bin/bash

set -e

# Location of the portal
PORTAL="assets/portal"
PROJECT_DIR="../../"


COMMAND=()
while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
  -s | --stage)
    STAGE="$2"
    shift # past argument
    shift # past value
    ;;
  -r | --region)
    REGION="$2"
    shift # past argument
    shift # past value
    ;;
  *) # unknown option
    COMMAND+=("$1") # save it in an array for later
    shift           # past argument
    ;;
  esac
done
set -- "${COMMAND[@]}" # restore positional parameters

echo "STAGE  = ${STAGE}"
echo "REGION = ${REGION}"


export DEPLOY_ENVIRONMENT=$STAGE
export REGION=$REGION
export CUSTOM_VOCABULARY_NAME="custom-vocabulary"


# Execute the build process for the serverless project

eval "npm install"
eval "npx serverless package --region $REGION --stage $STAGE"

# Copy the generated lambda zip
rm -rf "./functions/packages/"*
cp ".serverless/aws-icc.zip" "./functions/packages/aws-icc.zip"
cp ".serverless/custom-resources.zip" "./functions/packages/custom-resources.zip"


# # Modifies the cloudformation template generated by the Serverless Framework
cp "./.serverless/cloudformation-template-update-stack.json" "./templates/aws-icc.template"
eval "python ./assets/scripts/transform.py --template ./templates/aws-icc.template --save ./templates/aws-icc.template --zip packages/aws-icc.zip" --custom "packages/custom-resources.zip"

# # # Build the frontend portal
cd "./$PORTAL" || exit
eval "npm install"
eval "npm run build:production"
cd "$PROJECT_DIR"

# Copy all the files from the frontend build into the .dist directory
# cp -rf "./$PORTAL/build/"* "$AWS_ICC_DIST/assets/portal"